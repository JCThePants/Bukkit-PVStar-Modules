apply plugin: 'java'

defaultTasks 'clean', 'build'

project.evaluationDependsOnChildren()

subprojects {

        defaultTasks 'clean', 'build'

        apply plugin: 'java'

        // Minimum Java Version
        sourceCompatibility = 1.7
        targetCompatibility = 1.7


        // Set version number
        if (hasProperty("teamcity")) {
            version = project.majorVersion + '.' + teamcity["build.number"] + '.git-' + teamcity["build.vcs.number"]

            if (project.buildBy == null) {
                buildBy = teamcity["build.triggeredBy.username"]

                if (!buildBy) {
                    buildBy = teamcity["build.triggeredBy"]
                }

                if (!buildBy) {
                    buildBy = teamcity["agent.name"]
                }
            }

        }else {
            version = project.majorVersion + '.000.git-unknown'
        }

        if (buildBy == null) {
            buildBy = System.properties['user.name']
        }

        repositories {
            mavenCentral()

            flatDir {
                name "fileRepo"
                dirs "repo"
            }
        }

        // Add provided configuration to prevent dependencies
        // from being included in the jar
        configurations {
            provided
        }

        sourceSets {

            main {
                compileClasspath += configurations.provided
                runtimeClasspath += configurations.provided

                java {
                    srcDir 'src'
                }
            }

            test {
                compileClasspath += configurations.provided
                runtimeClasspath += configurations.provided
            }
        }

        // Add dependencies
        dependencies {

            if (project.compileDepends) {
                compile files(project.compileDepends)
            }

            if (project.providedDepends) {
                provided files(project.providedDepends)
            }
        }

        // Task to create a Jar file artifact with no version number
        task simpleNamedJar(type: Jar) {

            archiveName = projectName + '.jar'

            from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }

            if (includeFiles) {
                from includeFiles
            }

            manifest {
                attributes("Built-By": buildBy,
                        "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
                        "Implementation-Title": projectName,
                        "Implementation-Version": version)
            }

            with jar
        }

        artifacts {
            archives simpleNamedJar
        }

        task copyDeploy(type: Copy) {
            from "build/libs"
            into "deploy"
        }
    

}